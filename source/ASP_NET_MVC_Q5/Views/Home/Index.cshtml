@model ASP_NET_MVC_Q5.ViewModels.ProductListViewModel

@{
    ViewBag.Title = "ASP_NET_MVC_Q5";
}

@using X.PagedList.Mvc;

<div class="jumbotron">
    <h1>Query</h1>
    <p class="lead">Þetta er breytt jumbotron sem hernema allt lárétt pláss foreldris síns.</p>
    <hr class="my-4">
    <form action="@Url.Action("Index", "Home")" method="post">
        <div class="form-group">
            <label for="InputLocale">Locale</label>
            <select name="InputLocale" id="InputLocale" class="form-control"></select>
        </div>
        <div class="form-group">
            <label for="InputProductName">Product Name</label>
            <input type="text" class="form-control" name="InputProductName" id="InputProductName" placeholder="ps4, apple, airpod....." value="@Model.InputProductName">
        </div>
        <div class="form-group">
            <label for="InputPriceMax">Price higher than</label>
            <input type="text" class="form-control" name="InputPriceMax" id="InputPriceMax" placeholder="please set a number" value="@Model.InputPriceMax">
        </div>
        <div class="form-group">
            <label for="InputPriceMin">Price lower than</label>
            <input type="text" class="form-control" name="InputPriceMin" id="InputPriceMin" placeholder="please set a number" value="@Model.InputPriceMin">
        </div>
        <button type="submit" class="btn btn-primary">Query</button>
    </form>
</div>

<h2>List of Products</h2>
<table class="table table-bordered table-striped">
    @{var dummy = Model.ProductList.FirstOrDefault(); }
    <tr>
        <th>@Html.DisplayNameFor(model => dummy.Id)</th>
        <th>@Html.DisplayNameFor(model => dummy.Product_Name)</th>
        <th>@Html.DisplayNameFor(model => dummy.Locale)</th>
        <th>@Html.DisplayNameFor(model => dummy.Price)</th>
        <th></th>
    </tr>

    @foreach (var item in Model.ProductList)
    {
        <tr>
            <td>
                @Html.DisplayFor(m => item.Id)
            </td>
            <td>
                @Html.DisplayFor(m => item.Product_Name)
            </td>
            <td>
                @Html.DisplayFor(m => item.Locale)
            </td>
            <td>
                @Html.DisplayFor(m => item.Price)
            </td>
            <td>
                @Html.ActionLink("Detail", "Detail", new { id = item.Id })
            </td>
        </tr>
    }

</table>

@Html.PagedListPager((X.PagedList.IPagedList)Model.ProductList,
    page => Url.Action("Index", new { page=page, model=Model }),
    new PagedListRenderOptions
    {
        ContainerDivClasses = new[] { "" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 5
    })

@section scripts{
    <script>
        $(document).ready(function () {
            getLocale();
        });

        function getLocale() {
            var dpmtUrl = '/Home/GetLocale';
            $.ajax({
                url: dpmtUrl,
                type: 'post',
                cache: false,
                async: false,
                dataType: 'json',
                success: function (data) {
                    data = JSON.parse(data);
                    if (data.length > 0) {
                        $('#InputLocale').empty();
                        $('#InputLocale').append($('<option></option>').val('').text('please choose locale'));
                        $.each(data, function (i, item) {
                            $('#InputLocale').append($('<option></option>').val(item.Name).text(item.FullName));
                        });
                        var slctLocal = '@Model.InputLocale';
                        if (slctLocal != '') {
                            $('#InputLocale').val(slctLocal);
                        }
                    }
                }
            });
        }

        function query() {
            var queryUrl = '/Home/Query';
            $.ajax({
                url: queryUrl,
                type: 'post',
                cache: false,
                async: false,
                dataType: 'json',
                success: function (data) {
                    data = JSON.parse(data);
                    if (data.length > 0) {
                        // todo..
                    }
                }
            });
        }
    </script>
}